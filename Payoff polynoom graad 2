def payoff_coeff_graad2(a, b, x1, x2, k, K):
#kiezen polynoom graad 2
    C = 0.25
    c = 1 / 2
    # european put options coefficients
    if C*x1**2 + c * x1 < K < C*x2**2 + c * x2:
      y = (np.sqrt(c**2 + 4 * C * K) - c) / (2 * C)
      term1 = (np.sin(k * np.pi*((y - a) / (a - b)))*(-2 * a**2 * C + 4 * a * b * C - \
               2 * b**2 * C + np.pi**2 * k**2*(y*(c + C* K))) + 
               k * np.pi * (a-b) * (c + 2 * C)*np.cos(k * np.pi*((y - a) / (a - b))))
      term1_k0 = (2/(b - a)) * (K * y - 0.5 * c * y**2 - (C * y**3) / 3)

      y = x1
      term2 = (np.sin(k * np.pi*((y - a) / (a - b)))*(-2 * a**2 * C + 4 * a * b * C - \
               2 * b**2 * C + np.pi**2 * k**2*(y*(c + C* K))) + 
               k * np.pi * (a-b) * (c + 2 * C)*np.cos(k * np.pi*((y - a) / (a - b))))
      term2_k0 = (2/(b - a)) * (K * y - 0.5 * c * y**2 - (C * y**3) / 3)

    elif C * x2**2 + c * x2 < K :
      y = x2
      term1 = (np.sin(k * np.pi*((y - a) / (a - b)))*(-2 * a**2 * C + 4 * a * b * C - \
               2 * b**2 * C + np.pi**2 * k**2*(y*(c + C* K))) + 
               k * np.pi * (a-b) * (c + 2 * C)*np.cos(k * np.pi*((y - a) / (a - b))))
      term1_k0 = (2/(b - a)) * (K * y - 0.5 * c * y**2 - (C * y**3) / 3)
      y = x1
      term2 = (np.sin(k * np.pi*((y - a) / (a - b)))*(-2 * a**2 * C + 4 * a * b * C - \
               2 * b**2 * C + np.pi**2 * k**2*(y*(c + C* K))) + 
               k * np.pi * (a-b) * (c + 2 * C)*np.cos(k * np.pi*((y - a) / (a - b))))
      term2_k0 = (2/(b - a)) * (0.5*y**2 - K*y)
      
    else:
        term1 = np.zeros_like(k, dtype=float)
        term2 = np.zeros_like(k, dtype=float)
        term1_k0 = 0.0
        term2_k0 = 0.0

    exprtotaal = term1 - term2
    exprtotaal[1:] = (-2 * (a - b) * exprtotaal[1:] / (k[1:]**3 * np.pi**3)) / (b - a)
    exprtotaal[0] = term1_k0 - term2_k0
    return exprtotaal
