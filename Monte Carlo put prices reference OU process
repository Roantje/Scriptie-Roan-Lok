import numpy as np

# Parameters
S0 = 1              # Initial asset price
K = 1.5             # Strike
r = 0.01             # Risk-free rate
T = 0.1             # Maturity
N = 10000           # Number of simulations
dt = 0.01             # Time step
steps = int(T / dt)   # Number of steps

# Simulate OU process: dX = -X dt + dW
X = np.zeros((N, steps + 1))
for t in range(steps):
    Z = np.random.normal(0, 1, N)
    X[:, t+1] = X[:, t] - X[:, t]*dt + np.sqrt(dt)*Z

# Map X_T to S_T
ST = S0 * np.exp(X[:, -1])

# Compute value
payoffs = np.maximum(K - ST, 0)
put_price = np.exp(-r * T) * np.mean(payoffs)

print(f"European put option price (MC estimate): {put_price:.4f}")
